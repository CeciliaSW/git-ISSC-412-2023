Código remoto - Comandos:
- git clone
Crea una copia local del repositorio.
Ej. git clone <repo_url>

- git status
Devuelve el estado actual del repositorio.
Ej. git status

- git add
Prepara cambios (línea por línea) para ser incluidos en un commit.
Ej 1. git add notas.txt (Agrega solo un 1 archivo).
Ej 2. git add . (Agrega todos los archivos).

- git commit
Crear un nuevo commit con los cambios que se prepararon con git add.
Ej. git commit -m "Cambios"

- git push
Sincroniza la rama remota con lo que hay en la local. 
En otras palabras, sube los commits que hay en la local y faltan en la remota.
Ej. git push

- git fetch
Trae los metadatos sobre commits, ramas, ref, etc. de un repositorio remoto. 
No descarga cambios a la rama local, solo trae los metadatos. 
Ej. git fetch

- git pull
Sincroniza la rama local con lo que hay en la remota.
En otras palabras, descarga los commits que hay en la remota y faltan en la local.
Ej. git pull

Ramas:
Las ramas nos permiten trabajar con el repositorio sin alterar la estabilidad de la rama principal.
Como cualquier otra rama, hay una local y una remota.
Las ramas parten de un commit de origen.

Integración de ramas:
Para este fin, se utiliza la operación "merge".
Un merge combina los commits de una rama hacia otra en un solo commit conocido como un "merge commit".

Resolución de conflictos:
Estraegias:
1. Merge commit: Crea un merge commit con cambios aplicados en el orden que el desarrollador elija.
2. Rebase: Cambia el punto de origen de una rama, resolviendo conflictos durante la operación. Requiere un "force push" para sobreescribir la rama remota.

Pull request: 
Solicita la aprobación de los cambios en una rama a otro colaborador, previo a la integración de las dos ramas.